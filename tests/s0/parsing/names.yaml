%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: A name can be a number
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          1337: {}
  statements: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: 1337

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: A name can include spaces
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          "call function": {}
  statements: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: "call function"

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: A name can include any kind of punctuation
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          ? |
            call !@#$%^&*()-=_+[]{}|\;':",./<>?`~
          : {}
  statements: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: |
      call !@#$%^&*()-=_+[]{}|\;':",./<>?`~

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: A name can include Unicode control characters
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          "call\x1ffunction": {}
  statements: []
  invocation:
    !s0!invoke-closure
    src: exit
    # \x1f is "Unit Separator"
    branch: "call\x1ffunction"

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: A name cannot be a sequence
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          ? []
          : {}
  statements: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: []

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: A name cannot be a mapping
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          ? {}
          : {}
  statements: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: {}
