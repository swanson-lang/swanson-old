%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-closure can create a new environment entry
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over: []
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure needs a destination
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      closed-over: []
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure needs a closure set
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure needs a branches section
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure needs at least one branch
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over: []
      branches: {}
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure cannot overwrite an input
module:
  inputs:
    - external: x
      internal: x
      type: !s0!any {}
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over: []
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure cannot overwrite an existing environment entry
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over: []
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
    - !s0!create-closure
      dest: x
      closed-over: []
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure closure set cannot contain duplicates
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over:
        - x
        - x
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-closure branch list cannot contain duplicates
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-closure
      dest: x
      closed-over:
        - x
      branches:
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
        body:
          inputs:
            - external: exit
              internal: exit
              type: !s0!closure
                branches:
                  return: {}
          statements: []
          invocation:
            !s0!invoke-closure
            src: exit
            branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return
