%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-literal can create a new environment entry
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: stuff
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-literal content can be a number
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: 1337
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-literal content can include spaces
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: "lots of stuff"
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-literal content can include any kind of punctuation
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: |
        stuff !@#$%^&*()-=_+[]{}|\;':",./<>?`~
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-literal content can include Unicode control characters
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      # \x1f is "Unit Separator"
      content: "some\x1fstuff"
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-literal needs a destination
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      content: stuff
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-literal needs content
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-literal content cannot be a sequence
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: []
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-literal content cannot be a mapping
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: {}
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-literal cannot overwrite an input
module:
  inputs:
    x: x
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: stuff
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-literal cannot overwrite an existing environment entry
module:
  inputs:
    exit: exit
  statements:
    - !s0!create-literal
      dest: x
      content: stuff
    - !s0!create-literal
      dest: x
      content: more stuff
  invocation:
    !s0!invoke-closure
    src: exit
    branch: call
