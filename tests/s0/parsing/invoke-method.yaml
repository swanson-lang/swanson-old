%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: invoke-method can call a method in the environment
module:
  inputs:
    self: !s0!any {}
  statements: []
  invocation:
    !s0!invoke-method
    src: self
    method: id
    parameters: {}

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: invoke-method needs a source
module:
  inputs:
module:
  inputs:
    self: !s0!any {}
  statements: []
  invocation:
    !s0!invoke-method
    method: id
    parameters: {}

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: invoke-method needs a method
module:
  inputs:
    self: !s0!any {}
  statements: []
  invocation:
    !s0!invoke-method
    src: self
    parameters: {}

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: invoke-method needs a param
module:
  inputs:
    self: !s0!any {}
  statements: []
  invocation:
    !s0!invoke-method
    src: self
    method: id

# TODO - invoke-method cannot call a missing environment entry
# TODO - invoke-method cannot call an atom
# TODO - invoke-method cannot call a closure
# TODO - invoke-method cannot call a literal
# TODO - invoke-method cannot call a method
# TODO - invoke-method cannot call a missing method
# TODO - invoke-method environment must satisfy the inputs of its target
