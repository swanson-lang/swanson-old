%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!successful-parse
name: create-method can create a new environment entry
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-method
      dest: x
      self-input: self
      body:
        inputs:
          - external: exit
            internal: exit
            type: !s0!closure
              branches:
                return: {}
        statements: []
        invocation:
          !s0!invoke-closure
          src: exit
          branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-method needs a destination
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-method
      self-input: self
      body:
        inputs:
          exit: exit
        statements: []
        invocation:
          !s0!invoke-closure
          src: exit
          branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-method needs a self input
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-method
      dest: x
      body:
        inputs:
          - external: exit
            internal: exit
            type: !s0!closure
              branches:
                return: {}
        statements: []
        invocation:
          !s0!invoke-closure
          src: exit
          branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-method needs a body
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-method
      dest: x
      self-input: self
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-method cannot overwrite an input
module:
  inputs:
    - external: x
      internal: x
      type: !s0!any {}
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-method
      dest: x
      self-input: self
      body:
        inputs:
          - external: exit
            internal: exit
            type: !s0!closure
              branches:
                return: {}
        statements: []
        invocation:
          !s0!invoke-closure
          src: exit
          branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return

%TAG !s0! tag:swanson-lang.org,2016:
---
!s0!invalid-parse
name: create-method cannot overwrite an existing environment entry
module:
  inputs:
    - external: exit
      internal: exit
      type: !s0!closure
        branches:
          return:
            x: !s0!any {}
  statements:
    - !s0!create-method
      dest: x
      self-input: self
      body:
        inputs:
          - external: exit
            internal: exit
            type: !s0!closure
              branches:
                return: {}
        statements: []
        invocation:
          !s0!invoke-closure
          src: exit
          branch: return
    - !s0!create-method
      dest: x
      self-input: self
      body:
        inputs:
          - external: exit
            internal: exit
            type: !s0!closure
              branches:
                return: {}
        statements: []
        invocation:
          !s0!invoke-closure
          src: exit
          branch: return
  invocation:
    !s0!invoke-closure
    src: exit
    branch: return
